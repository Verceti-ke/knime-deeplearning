<?xml version="1.0" encoding="UTF-8"?>
<knimeNode icon="dlkerasconvlstm2dlayer.png" type="Other" xmlns="http://knime.org/node/v3.6" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://knime.org/node/v3.6 http://knime.org/node/v3.6.xsd">
	<name>Keras Convolutional LSTM 2D Layer</name>

	<shortDescription>
		2D Convolutional Long-Short Term Memory (LSTM) layer.
	</shortDescription>

	<fullDescription>
		<intro>
			2D Convolutional Long-Short Term Memory (LSTM) layer.
			Similar to a normal LSTM, but the input and recurrent transformations are both convolutional.
			Corresponds to the
			<a href="https://keras.io/layers/recurrent/#convlstm2d">ConvLSTM2D Keras layer</a>
			.
		</intro>
		<tab name="Options">
		<option name="Name prefix">
			The name prefix of the layer. The prefix is complemented by an index suffix to obtain a unique layer name. If this option is unchecked, the name prefix is derived from the layer type.
		</option>
			<option name="Input tensor">
				The tensor to use as input for the layer.
			</option>
			<option name="First hidden state tensor">
				The tensor to use as initial state for the first hidden state in case the corresponding port is connected.
			</option>
			<option name="Second hidden state tensor">
				The tensor to use as initial state for the second hidden state in case the corresponding port is connected.
			</option>
			<option name="Filters">
				Dimensionality of the output space.
			</option>
			<option name="Kernel size">
				A comma separated pair of integers that describes the size of the convolutional kernel.
			</option>
			<option name="Strides">
				A comma separated pair of positive integers that describes the stride of the network in each spatial dimension.
				A stride != 1 results in an output downsampled by a factor of 1/stride in the specific dimension.
				Note that any stride value != 1 is incompatible with specifying any dilation rate value != 1.
			</option>
			<option name="Padding">
				Same padding keeps the spatial size of the input intact (provided no stride or dilation is used) while valid padding reduces the size
				of the input.
			</option>
			<option name="Dilation rate">
				A comma separated pair of integers specifying the dilation rate to use for dilated convolution.
				Note that it is not supported to specify a stride value != 1 and a dilation rate value != 1.
			</option>
			<option name="Activation">
				The activation function to use on the input transformations.
			</option>
			<option name="Recurrent activation">
				The activation function to use for the recurrent step.
			</option>
			<option name="Use bias">
				If checked, a bias vector will be used.
			</option>
			<option name="Return sequences">
				Whether to return the last output in the output sequence or the full output sequence.
				If selected the output will have shape [time, height, width, channel] otherwise the output
				will have shape [height, width, channel] (for data format channel_last).
			</option>
			<option name="Return state">
				Whether to return the hidden states in addition to the layer output.
				If selected the layer returns three tensors, the normal output and the two hidden states of the layer.
				If sequences are returned, this also applies to the hidden states.
			</option>
			<option name="Go backwards">
				Whether to go backwards in time i.e. read the input sequence backwards.
			</option>
			<option name="Dropout">
				Fraction of the units to drop for the linear transformation of the input.
			</option>
			<option name="Recurrent dropout">
				Fraction of the units to drop for the linear transformation of the recurrent state.
			</option>
		</tab>
		<tab name="Initializers">
			<option name="Kernel initializer">
				Initializer for the convolutional kernel used for the linear transformations of the input.
				See <a href="https://keras.io/initializers/">initializers</a> for details on the available initializers.
			</option>
			<option name="Recurrent initializer">
				Initializer for the convolutional kernel used for the linear transformation of the recurrent connection.
				See <a href="https://keras.io/initializers/">initializers</a> for details on the available initializers.
			</option>
			<option name="Bias initializer">
				Initializer for the bias vector (if a bias is used).
				See <a href="https://keras.io/initializers/">initializers</a> for details on the available initializers.
			</option>
			<option name="Unit forget bias">
			 	If selected, add 1 to the bias of the forget gate at initialization. Use in combination with bias initializer zeros.
			 </option>
		</tab>
		<tab name="Regularizers">
			<option name="Kernel regularizer">
				Regularizer function applied to the convolutional kernel.
				See <a href="https://keras.io/regularizers/">regularizers</a> for details on the available regularizers.
			</option>
			<option name="Recurrent regularizer">
				Regularizer function applied to the convolutional kernel for the recurrent connection.
				See <a href="https://keras.io/regularizers/">regularizers</a> for details on the available regularizers.
			</option>
			<option name="Bias regularizer">
				Regularizer function applied to the bias vector.
				See <a href="https://keras.io/regularizers/">regularizers</a> for details on the available regularizers.
			</option>
			<option name="Activity regularizer">
				Regularizer function applied to the output of the layer i.e. its activation.
				See <a href="https://keras.io/regularizers/">regularizers</a> for details on the available regularizers.
			</option>
		</tab>
		<tab name="Constraints">
			<option name="Kernel constraint">
				Constraint on the convolutional kernel for the input connection.
				See <a href="https://keras.io/constraints/">constraints</a> for details on the available constraints.
			</option>
			<option name="Recurrent constraint">
				Constraint on the convolutional kernel for the recurrent connection.
				See <a href="https://keras.io/constraints/">constraints</a> for details on the available constraints.
			</option>
			<option name="Bias constraint">
				Constraint on the bias vector.
				See <a href="https://keras.io/constraints/">constraints</a> for details on the available constraints.
			</option>
		</tab>
		<link href="https://www.knime.com/deeplearning/keras">
			KNIME Deep Learning Keras Integration
		</link>
	</fullDescription>
	<ports>
		<inPort index="0" name="Keras Network">
			The Keras deep learning network to which to add an
			<tt>ConvLSTM2D</tt>
			layer.
			The shape of the tensor must be [time, height, width, channel] or [time, channel, height, width] for data format channels_last and channels_first respectively.
		</inPort>
		<inPort index="1" name="Keras Network">
			An optional Keras deep learning network providing the first initial state for this <tt>ConvLSTM2D</tt> layer.
			Note that if this port is connected, you also have to connect the second hidden state port.
			The shape must be [height, width, channel] or [channel, height, width] depending on data format and the dimensionality of the channel dimension must match the number of filters of this layer.
		</inPort>
		<inPort index="2" name="Keras Network">>
			An optional Keras deep learning network providing the second initial state for this <tt>ConvLSTM2D</tt> layer.
			Note that if this port is connected, you also have to connect the first hidden state port.
			The shape must be [height, width, channel] or [channel, height, width] depending on data format and the dimensionality of the channel dimension must match the number of filters of this layer.
		</inPort>
		<outPort index="0" name="Keras Network">
			The Keras deep learning network with an added
			<tt>ConvLSTM2D</tt>
			layer.
		</outPort>
	</ports>
</knimeNode>
